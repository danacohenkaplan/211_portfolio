---
title: "MQMF Portfolio Assignment KEY"
format: html
editor: visual
---

[MQMF Simple Population Models](https://haddonm.github.io/URMQMF/simple-population-models.html#the-baranov-catch-equation)

[MQMF Package Github](https://github.com/haddonm/MQMF)

------------------------------------------------------------------------

## MQMF Library and the Baranov Catch Equation

Describes survivorship following the combination of fishing and natural mortality, but the simple Z for total mortality implied that all fish suffered the same fishing mortality. If we are to take account of selectivity then we need to consider fishing mortality at age.

Where Sa,t is the survivorship of fish aged a in year t, M is the natural mortality (assumed constant through time), sa is the selectivity for age a, and Ft is known as the fully selected fishing mortality in year t.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. The file can be viewed in your browser at http://localhost:4216/.

```{r}

## Load Required Libraries
library(MQMF)
library(ggplot2)
library(tidyverse)

rm(list=ls())

if(!require('MQMF')) {
  install.packages('MQMF')
  library('MQMF')
}

```

## Assignment Helper Functions for Analysis and Graphing

```{r}

# ----------------------------------------
# Assignment Helper Functions
# ----------------------------------------

# ----------------------------------------
# Function extracts key population metrics from a given dataset generated by the 
# MQMF Baranov Catch Equation bce(). It retrieves the population_at_age, mortality_at_age, 
# and catch_at_age from the dataset and returns them as a structured list
# ----------------------------------------
extract_bce_data <- function(bce_data) {
  # Check if bce_data has the expected columns
  if (!all(c("Nt", "N-Dying", "Catch") %in% colnames(bce_data))) {
    stop("Error: bce_data does not contain the required columns.")
  }
  
  # Extract relevant data
  population_at_age <- bce_data[, "Nt"]  
  mortality_at_age <- bce_data[, "N-Dying"]  
  catch_at_age <- bce_data[, "Catch"]  
  
  # Return as a list
  return(list(
    population_at_age = population_at_age,
    mortality_at_age = mortality_at_age,
    catch_at_age = catch_at_age
  ))
}

# ----------------------------------------
# Function to graph the given species Population size by age range
# Parameters: age_range, population_data
# ----------------------------------------
plot_fish_population <- function(age_range, population_data) {
  # Check inputs
  if (length(age_range) != length(population_data)) {
    stop("Error: age_range and population_data must have the same length.")
  }
  
  # Plot the fish population at age
  plot(age_range, population_data, type = "o", col = "blue",
       xlab = "Age", ylab = "Population (Nt)",
       main = "Fish Population at Age")
}

# ----------------------------------------
# Function to plot the catch-at-age distribution
# Parameters: age_range, catch_at_age
# ----------------------------------------
plot_catch_at_age <- function(age_range, catch_at_age) {
  # Check inputs
  if (length(age_range) != length(catch_at_age)) {
    stop("Error: age_range and catch_at_age must have the same length.")
  }
  
  # Create a data frame from input vectors
  species_data <- data.frame(
    Age = age_range,
    Catch = catch_at_age
  )
  
  # Generate the catch-at-age distribution plot
  ggplot(species_data, aes(x = Age, y = Catch)) +
    geom_line(color = "red", size = 1, na.rm = TRUE) +  # Line plot for catch-at-age
    geom_point(color = "red", na.rm = TRUE) +           # Add points for clarity
    theme_minimal() +
    labs(title = "Catch at Age Distribution",
         x = "Age (Years)",
         y = "Catch") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
}

# ----------------------------------------
# Function to plot fish population and catch at age
# Parameters: age_range, population_at_age, catch_at_age
# ----------------------------------------
plot_population_vs_catch <- function(age_range, population_at_age, catch_at_age) {
  # Validate input lengths
  if (length(age_range) != length(population_at_age) || length(age_range) != length(catch_at_age)) {
    stop("Error: age_range, population_at_age, and catch_at_age must have the same length.")
  }
  
  # Create a data frame from input vectors
  species_data <- data.frame(
    Age = age_range,
    Population = population_at_age,
    Catch = catch_at_age
  )
  
  # Generate the population vs. catch plot
  ggplot(species_data, aes(x = Age)) +
    geom_line(aes(y = Population, color = "Population"), linewidth = .5, na.rm = TRUE) +
    geom_line(aes(y = Catch, color = "Catch"), linewidth = .5, na.rm = TRUE) +
    theme_minimal() +
    labs(title = "Fish Population and Catch at Age",
         x = "Age (years)",
         y = "Number of Fish") +
    scale_color_manual(values = c("Population" = "blue", "Catch" = "red"))
}

```

## Baranov Catch Equation Setup

```{r}

# Age range of California halibut 
#(California halibut can live up to 30 years, individuals older than 15 years are rare)
age_range <- 0:30

# 22% (0.22) is a hypothetical value
harvest_rate = 0.22
# Compute the instantaneous fishing mortality (Ft = −ln(1 − harvest_rate))
# Ft ≈ 0.2231 or fishing mortality is about 22.3% per year
instantaneous_fishing_mortality <- -log(1 - harvest_rate) 

# Fishing mortality (F) at age (n)
fishing_mortality_n <- rep(instantaneous_fishing_mortality, length(age_range))

# Studies have estimated the natural mortality rate (M) for California halibut 20% per year.
# Natural Mortality (M)
M <- 0.20

# Initial population size of 1000 is a hypothetical value
# Actual population depend on stock assessments and environmental conditions
# Initial Population (Nt)
Nt <- 1000

bce_data <- bce(M, Fat = fishing_mortality_n, Nt, ages=age_range) 

```

## Examine the data output

You should also grab each date field from the bce() function output to run further analysis

```{r}

print(bce_data)

california_halibut_data <- extract_bce_data(bce_data)

```

## Quick Look: Fish Population at Age

```{r}

plot_fish_population(age_range, california_halibut_data$population_at_age)


```

## Plot the Catch at Age (n) Distribution

```{r}

plot_catch_at_age(age_range, california_halibut_data$catch_at_age)


```

## Plot the Species Population and Catch at Age for Species

```{r}

plot_population_vs_catch(age_range, california_halibut_data$population_at_age, california_halibut_data$catch_at_age)


```

# Now It's you turn:Atlantic Cod - https://www.fisheries.noaa.gov/species/atlantic-cod#:~:text=date%20of%202026.-,Harvest,Fisheries%20commercial%20fishing%20landings%20database.

```{r}

# ----------------------------------------
# Baranov catch equation setup 
# ----------------------------------------

# Age range 0 to 22 years old
age_range <- 0:22


# 10% (0.10) is a hypothetical value
harvest_rate = 0.05
# Compute the instantaneous fishing mortality (Ft = −ln(1 − harvest_rate))
# Ft ≈ 0.2231 or fishing mortality is about 22.3% per year
instantaneous_fishing_mortality <- -log(1 - harvest_rate) 

# Fishing mortality (F) at age (n)
fishing_mortality_n <- rep(instantaneous_fishing_mortality, length(age_range))

# Natural Mortality (M) Googled this
M <- 0.20

# Initial population size of 12000 Mt in 2023
# Actual population depend on stock assessments and environmental conditions
# Initial Population (Nt)
Nt <- 12000

if (is.null(age_range) | is.null(M) | is.null(Nt)) {
      stop("Error: Please fill in age range, natural mortality, and population size for your species. If you are having trouble finding them online, please use a value that makes sense.")
}

bce_cod_data <- bce(M, Fat = fishing_mortality_n, Nt, ages=age_range) 

print(bce_cod_data)

cod_data <- extract_bce_data(bce_cod_data)
plot_fish_population(age_range, cod_data$population_at_age)

# Keep going...


```
## Plot the Catch at Age (n) Distribution

```{r}

plot_catch_at_age(age_range, cod_data$catch_at_age)


```
## Plot the Species Population and Catch at Age for Species

```{r}

plot_population_vs_catch(age_range, cod_data$population_at_age, cod_data$catch_at_age)


```

## **Conservation Recommendation Question:**

(Recommendations dependent on species reproduction age, size at age, and catch rate)

1.  What is the minimum catch size of your species and why?

Minimum catch size of 0.05 allows many individuals to live out their full life spans, maximizing reproduction opportunity and supporting the fishery. This is not exact, but was close after playing around with the numbers.

2.  What could be a potential slot limit to also protect large spawners? Why would this be implemented?\

    Atlantic Cod can reproduce after 2-3 years, so giving them time to do so would be advisable. I would recommend allowing for 5 years of reproduction before allowable harvest as this fishery is severely overfished. Fish younger than 8 years may not be harvested, but no older limit is recommeded.

3.  Why would there be catch limits for your species? What is a real-world example of a catch limit for your species

Catch limits allow fish populations to sustain themselves, ideally at levels around the Maxium Sustainable Yield (MSY). This is done to maintain a breeding population. Atlantic cod is strictly regulated in the Gulf of maine and Geroges Bank after stocks crashed in the 1990s from overfishing.

##### 

##### Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.
